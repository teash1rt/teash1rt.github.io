<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Marianne&#39;s Blog</title>
  
  <subtitle>Blog</subtitle>
  <link href="https://teash1rt.github.io/atom.xml" rel="self"/>
  
  <link href="https://teash1rt.github.io/"/>
  <updated>2024-06-15T16:46:50.679Z</updated>
  <id>https://teash1rt.github.io/</id>
  
  <author>
    <name>Marianne</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端工程化</title>
    <link href="https://teash1rt.github.io/2023/09/28/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    <id>https://teash1rt.github.io/2023/09/28/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/</id>
    <published>2023-09-27T18:16:21.000Z</published>
    <updated>2024-06-15T16:46:50.679Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Prettier-和-Eslint"><a href="#Prettier-和-Eslint" class="headerlink" title="Prettier 和 Eslint"></a>Prettier 和 Eslint</h3><ul><li>安装 Prettier</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install prettier -D</span><br></pre></td></tr></table></figure><ul><li>配置 Prettier</li></ul><p>根目录下创建<code>.prettierrc</code>定义规则</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tabWidth&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;endOfLine&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bracketSpacing&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;arrowParens&quot;</span><span class="punctuation">:</span> <span class="string">&quot;avoid&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bracketSameLine&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;printWidth&quot;</span><span class="punctuation">:</span> <span class="number">130</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>package.json</code>中添加命令定义范围</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier --write  \&quot;src/**/*.ts\&quot; \&quot;src/**/*.vue\&quot; \&quot;src/**/*.less\&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>安装 Eslint</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i eslint -D</span><br></pre></td></tr></table></figure><ul><li>初始化 Eslint</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx eslint --init</span><br></pre></td></tr></table></figure><p>在最后<code>Would you like to install them now?</code>选择<code>no</code></p><ul><li>安装依赖</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D eslint-plugin-vue@latest @typescript-eslint/eslint-plugin@latest @typescript-eslint/parser@latest eslint-config-prettier eslint-plugin-prettier</span><br></pre></td></tr></table></figure><ul><li>配置 Eslint</li></ul><p>根目录下的<code>.eslintrc.cjs</code>定义规则</p><figure class="highlight cjs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">env</span>: &#123;</span><br><span class="line">        <span class="attr">browser</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">es2021</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">node</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">extends</span>: [</span><br><span class="line">        <span class="string">&#x27;eslint:recommended&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;plugin:@typescript-eslint/recommended&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;plugin:vue/vue3-essential&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;plugin:prettier/recommended&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">overrides</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">env</span>: &#123;</span><br><span class="line">                <span class="attr">node</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">files</span>: [<span class="string">&#x27;.eslintrc.&#123;js,cjs&#125;&#x27;</span>],</span><br><span class="line">            <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">                <span class="attr">sourceType</span>: <span class="string">&#x27;script&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">        <span class="attr">ecmaVersion</span>: <span class="string">&#x27;latest&#x27;</span>,</span><br><span class="line">        <span class="attr">parser</span>: <span class="string">&#x27;@typescript-eslint/parser&#x27;</span>,</span><br><span class="line">        <span class="attr">sourceType</span>: <span class="string">&#x27;module&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [<span class="string">&#x27;@typescript-eslint&#x27;</span>, <span class="string">&#x27;vue&#x27;</span>],</span><br><span class="line">    <span class="attr">rules</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;vue/multi-word-component-names&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">ignorePatterns</span>: [<span class="string">&#x27;dist/**&#x27;</span>, <span class="string">&#x27;node_modules/**&#x27;</span>, <span class="string">&#x27;coverage/**&#x27;</span>],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>package.json</code>中添加命令定义范围</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;lint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eslint . --ext .vue,.js,.ts,.jsx,.tsx --fix&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="打包优化"><a href="#打包优化" class="headerlink" title="打包优化"></a>打包优化</h3><h4 id="GZIP-和打包可视化"><a href="#GZIP-和打包可视化" class="headerlink" title="GZIP 和打包可视化"></a>GZIP 和打包可视化</h4><ul><li>webpack</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack-bundle-analyzer -D</span><br><span class="line">npm install compression-webpack-plugin -D</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BundleAnalyzerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;webpack-bundle-analyzer&#x27;</span>).<span class="property">BundleAnalyzerPlugin</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CompressionWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;compression-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">configureWebpack</span>: &#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">BundleAnalyzerPlugin</span>(),</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">CompressionWebpackPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(js|css)$/</span>,</span><br><span class="line">        <span class="attr">algorithm</span>: <span class="string">&#x27;gzip&#x27;</span>,</span><br><span class="line">        <span class="attr">threshold</span>: <span class="number">10240</span>, <span class="comment">// 超过10kb的文件就压缩</span></span><br><span class="line">        <span class="attr">deleteOriginalAssets</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">minRatio</span>: <span class="number">0.8</span></span><br><span class="line">      &#125;)</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>vite</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">npm install vite-plugin-compression -D</span><br><span class="line">npm install rollup-plugin-visualizer -D</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; visualizer &#125; <span class="keyword">from</span> <span class="string">&#x27;rollup-plugin-visualizer&#x27;</span></span><br><span class="line"><span class="keyword">import</span> viteCompression <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-compression&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">visualizer</span>(&#123;</span><br><span class="line">      <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&quot;stats.html&quot;</span>,</span><br><span class="line">      <span class="attr">gzipSize</span>: <span class="literal">true</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title function_">viteCompression</span>(&#123;</span><br><span class="line">      <span class="attr">algorithm</span>: <span class="string">&#x27;gzip&#x27;</span>,</span><br><span class="line">      <span class="attr">threshold</span>: <span class="number">10240</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><ul><li>webpack</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首先在config配置</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">configureWebpack</span>: &#123;</span><br><span class="line">    <span class="attr">externals</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;echarts&#x27;</span>: <span class="string">&#x27;echarts&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;axios&#x27;</span>: <span class="string">&#x27;axios&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;moment&#x27;</span>: <span class="string">&#x27;moment&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;js-cookie&#x27;</span>: <span class="string">&#x27;Cookies&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 然后在index.html配置</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/axios/1.3.6/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.4.2/echarts.common.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/moment.js/2.29.4/moment.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/js-cookie/latest/js.cookie.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><ul><li>vite</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">npm install vite-plugin-cdn-<span class="keyword">import</span> -D</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> importToCDN <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-cdn-import&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">importToCDN</span>(&#123;</span><br><span class="line">      <span class="attr">modules</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;monaco-editor&#x27;</span>,</span><br><span class="line">          <span class="attr">var</span>: <span class="string">&#x27;monaco&#x27;</span>,</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;https://cdn.jsdelivr.net/npm/monaco-editor@0.34.0/min/vs&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">前端项目工程化的流程</summary>
    
    
    
    <category term="前端" scheme="https://teash1rt.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://teash1rt.github.io/tags/vue/"/>
    
    <category term="前端" scheme="https://teash1rt.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vue-springboot项目部署</title>
    <link href="https://teash1rt.github.io/2022/10/12/vue-springboot-mysql%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    <id>https://teash1rt.github.io/2022/10/12/vue-springboot-mysql%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</id>
    <published>2022-10-12T13:47:41.000Z</published>
    <updated>2023-09-29T13:51:01.586Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录 <code>vue + springboot</code> 项目部署在 <code>ubuntu20.04</code> 云服务器上的过程和部分细节 :grinning:</p></blockquote><h3 id="nginx-部署-vue-项目"><a href="#nginx-部署-vue-项目" class="headerlink" title="nginx 部署 vue 项目"></a><code>nginx</code> 部署 <code>vue</code> 项目</h3><ul><li>部署 <code>nginx</code> 环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><ul><li><code>nginx</code> 默认配置文件路径</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><ul><li><code>nginx</code> 模板代码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root为项目路径</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vue项目注意使用try_files这行防止404BUG</span></span><br><span class="line">server &#123;</span><br><span class="line">     listen 9010;</span><br><span class="line">     server_name _;</span><br><span class="line">     gzip: on;     # 如果项目开启了gzip压缩</span><br><span class="line">     location / &#123;</span><br><span class="line">         root /var/www/html/chess-app/dist;</span><br><span class="line">         index index.html index.htm index.nginx-debian.html;</span><br><span class="line">         try_files $uri $uri/ /index.html;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     # 如果vue项目中对跨域进行了proxy配置</span><br><span class="line">     location /api &#123;</span><br><span class="line">rewrite ^/api/(.*)$ /$1 break;</span><br><span class="line">proxy_pass http://152.136.154.181:8060;     #后台接口地址</span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="部署-springboot-项目"><a href="#部署-springboot-项目" class="headerlink" title="部署 springboot 项目"></a>部署 <code>springboot</code> 项目</h3><ul><li>部署 <code>java8</code> 环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure><ul><li>开启 <code>springboot</code> 项目永久部署（使用此方法重新部署时需要杀掉此端口的项目进程）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar ToDoList-backend-0.0.1-SNAPSHOT.jar &amp;</span><br></pre></td></tr></table></figure><ul><li>查看端口占用（<code>springboot</code> 默认端口号为 8060）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -i:8060</span><br></pre></td></tr></table></figure><ul><li>关闭指定 <code>PID</code> 的进程</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kill -9 &lt;PID&gt;</span><br></pre></td></tr></table></figure><ul><li>可用脚本自动化上述过程</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">! /bin/bash</span></span><br><span class="line">kill -9 `sudo lsof -i:8060`</span><br><span class="line"></span><br><span class="line">rm nohup.out</span><br><span class="line"></span><br><span class="line">nohup java -jar ToDoList-backend-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line"></span><br><span class="line">echo &#x27;already rebuild! --  http://152.136.154.181:8060/api/test&#x27;</span><br></pre></td></tr></table></figure><h3 id="部署-mysql"><a href="#部署-mysql" class="headerlink" title="部署 mysql"></a>部署 <code>mysql</code></h3><blockquote><p>该部分原作者 <a href="https://github.com/Zzzz0zzzZ">Zzzz0zzzZ (Zzzz0_0zzzZ) (github.com) </a>:kissing_heart:</p></blockquote><ul><li>部署 <code>mysql</code> 环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br><span class="line">sudo apt-get install mysql-client</span><br></pre></td></tr></table></figure><ul><li>创建用户设置密码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看默认⽤户名、密码</span></span><br><span class="line">sudo cat /etc/mysql/debian.cnf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登陆root⽤户</span></span><br><span class="line">sudo mysql -u &quot;⽂件中的user名&quot; -p</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--&gt;⾸次使⽤sudo，先输⼊sudo密码，然后输⼊user的密码</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进⼊mysql，创建新⽤户和密码,并授权</span></span><br><span class="line">create user &quot;⽤户名&quot;@&quot;%&quot; identified by &quot;密码&quot;;</span><br><span class="line">flush privileges;</span><br><span class="line">grant all privileges on *.* to &quot;⽤户名&quot;@&quot;%&quot;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注：删除⽤户</span></span><br><span class="line">drop user &quot;⽤户名&quot;@&quot;%&quot;</span><br></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使⽤vim编辑器，注意⽂件是mysqld.cnf,别少了<span class="string">&#x27;d&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到bind-address，修改127.0.0.1为0.0.0.0，代表全ip可⽤</span></span><br><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure><ul><li>常用命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql start</span><br><span class="line">sudo service mysql stop</span><br><span class="line">sudo service mysql restart</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登录mysql</span></span><br><span class="line">sudo mysql -u ⽤户名 -p</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看数据库</span></span><br><span class="line">show databases;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入数据库，使用use可直接切换数据库，无需退出</span></span><br><span class="line">use &lt;`database`&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看数据库中的表</span></span><br><span class="line">show tables;</span><br></pre></td></tr></table></figure><h3 id="部署Redis"><a href="#部署Redis" class="headerlink" title="部署Redis"></a>部署<code>Redis</code></h3><blockquote><p>2022.12.06 是个值得纪念的日子，首次被黑客攻击了捏，就是因为部署时候没有设置密码</p></blockquote><ul><li>使用<code>sudo vim /etc/redis/redis.conf</code> 编辑配置文件 <code>redis.conf</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">bind</span> 192.168.1.100 10.0.0.1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">bind</span> 127.0.0.1 ::1</span></span><br><span class="line">bind 127.0.0.1 &lt;服务器地址&gt;</span><br><span class="line"></span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line">port &lt;端口号&gt;</span><br><span class="line"></span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line">requirepass &lt;密码&gt;</span><br><span class="line"></span><br><span class="line">timeout 500</span><br><span class="line"></span><br><span class="line">tcp-keepalive 300</span><br><span class="line"></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line">supervised no</span><br><span class="line"></span><br><span class="line">pidfile /var/run/redis_5378.pid</span><br><span class="line"></span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line">logfile &quot;&quot;</span><br><span class="line"></span><br><span class="line">databases 30</span><br><span class="line"></span><br><span class="line">always-show-logo yes</span><br><span class="line"></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line">dir ./</span><br><span class="line"></span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line"></span><br><span class="line">replica-read-only yes</span><br><span class="line"></span><br><span class="line">repl-diskless-sync no</span><br><span class="line"></span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line">replica-priority 100</span><br><span class="line"></span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line"></span><br><span class="line">appendonly yes</span><br><span class="line"></span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line"></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line"></span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line"></span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line"></span><br><span class="line">list-compress-depth 0</span><br><span class="line"></span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line"></span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line">dynamic-hz yes</span><br><span class="line"></span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line"></span><br><span class="line">rdb-save-incremental-fsync yes</span><br></pre></td></tr></table></figure><ul><li>修改配置文件后重启</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/redis</span><br><span class="line">/bin/redis-server redis.conf</span><br></pre></td></tr></table></figure><ul><li>redis-cli -p <code>&lt;端口&gt;</code> -a <code>&lt;密码&gt;</code> 连接进入<code>redis</code></li></ul><h3 id="部署MongoDB"><a href="#部署MongoDB" class="headerlink" title="部署MongoDB"></a>部署<code>MongoDB</code></h3><blockquote><p>MongoDB 建议使用 docker 进行部署</p></blockquote><ul><li>拉取镜像 <code>docker pull mongo:latest</code></li><li>创建并运行容器 <code>docker run -itd --name mongo-test -p &lt;自定义端口号&gt;:27017 mongo --auth</code></li><li>进入容器 <code>docker exec -it  mongo-test mongosh</code></li><li>创建管理员和用户</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line"></span><br><span class="line">#创建管理员用户</span><br><span class="line">db.createUser(&#123;<span class="keyword">user</span>: &quot;admin&quot;,pwd: &quot;ABC&quot;,roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125; ]&#125;)</span><br><span class="line">db.auth(&quot;admin&quot;, &quot;ABC&quot;)</span><br><span class="line">db.createUser(&#123;<span class="keyword">user</span>: <span class="string">&#x27;tea&#x27;</span>,pwd: <span class="string">&#x27;abc&#x27;</span>,roles: [&#123;role: &quot;readWrite&quot;, db: &quot;admin&quot;&#125;]&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">vue-springboot项目部署流程</summary>
    
    
    
    <category term="项目部署" scheme="https://teash1rt.github.io/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="vue" scheme="https://teash1rt.github.io/tags/vue/"/>
    
    <category term="Springboot" scheme="https://teash1rt.github.io/tags/Springboot/"/>
    
    <category term="项目部署" scheme="https://teash1rt.github.io/tags/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>git&amp;ssh&amp;docker</title>
    <link href="https://teash1rt.github.io/2022/06/28/git-ssh-docker/"/>
    <id>https://teash1rt.github.io/2022/06/28/git-ssh-docker/</id>
    <published>2022-06-27T16:38:49.000Z</published>
    <updated>2023-09-29T12:28:27.750Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><hr><p>git 部分由于现在大多是个人开发所以<code>rebase</code> 和 <code>pull request</code> 都没有记录</p><h4 id="提交与查看"><a href="#提交与查看" class="headerlink" title="提交与查看"></a>提交与查看</h4><ul><li>git add <code>&lt;filename&gt;</code> / git add .<ul><li>git stash clear 清空暂存空间</li><li>git reset <code>&lt;filename&gt;</code> 将已经 add 但没 commit 的文件移除</li></ul></li><li>git commit -m <code>&lt;message&gt;</code></li><li>git status / git log / git relog</li><li>git rebase -i HEAD~<code>&lt;number&gt;</code> 压缩提交</li></ul><h4 id="回退"><a href="#回退" class="headerlink" title="回退"></a>回退</h4><ul><li>git reset —hard <code>&lt;commitID&gt;</code> 不保存所有变更</li><li>git reset —mixed <code>&lt;commitID&gt;</code> 回退提交但保留更改</li></ul><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><ul><li>git checkout -b <code>&lt;name&gt;</code> <code>&lt;template&gt;</code> 以 template 为模板建立以 name 为名的新分支</li><li>git branch -a 查看本地和远程分支<ul><li>git branch 查看本地分支</li><li>git branch -r 查看远程分支</li></ul></li><li>git checkout <code>&lt;BrachName&gt;</code> 切换分支</li><li>git config —global init.defaultBranch main 设置默认分支为 main</li><li>git branch -d <code>&lt;Local-BranchName&gt;</code> 删除本地分支</li><li>git push origin —delete <code>&lt;Remote-BranchName&gt;</code> 删除远程分支</li></ul><h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h4><ul><li>git merge <code>&lt;BranchName&gt;</code> 合并分支的变更</li><li>git rebase <code>&lt;BranchName&gt;</code> 变基分支</li></ul><h4 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h4><ul><li>git remote add origin <code>&lt;link&gt;</code><ul><li>git remote -v 查看仓库连接状态</li></ul></li><li>git clone <code>&lt;link&gt;</code></li><li>git push origin <code>&lt;Local-BranchName&gt;</code><ul><li>原命令 git push origin <code>&lt;Local-BranchName&gt;</code>:<code>&lt;Remote-BranchName&gt;</code></li><li>git push -f origin master 强制推送</li><li>git push origin —delete <code>&lt;Remote-BranchName&gt;</code> 删除远程主机的 master 的该分支</li></ul></li><li>git push —set-upstream origin <code>&lt;Local-BranchName&gt;</code></li><li>git pull origin <code>&lt;Remote-BranchName&gt;</code>:<code>&lt;Local-BranchName&gt;</code> 同时完成 fetch 和 merge 的操作</li></ul><h4 id="提交规范-type-部分"><a href="#提交规范-type-部分" class="headerlink" title="提交规范(type 部分)"></a>提交规范(type 部分)</h4><ul><li>sync：同步主线或分支的 bug</li><li>merge：代码合并</li><li>revert：回滚到上一个版本</li><li>chore：构建过程或辅助工具的变动</li><li>test：增加测试</li><li>perf：优化相关，比如提升性能、体验</li><li>refactor：重构（既不是新增功能，也不是修改 bug 的代码变动）</li><li>style：格式（不影响代码运行的变动）</li><li>docs：文档</li><li>fix / to：修复 bug</li><li>feat：新功能</li></ul><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><hr><h4 id="登陆与配置"><a href="#登陆与配置" class="headerlink" title="登陆与配置"></a>登陆与配置</h4><ul><li><p>ssh-keygen 创建 rsa 密钥</p></li><li><p>在 .ssh/config 下配置服务器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host myserver</span><br><span class="line">HostName 公网ip</span><br><span class="line">User 用户名</span><br></pre></td></tr></table></figure></li><li><p>ssh-copy-id <code>&lt;ServerName&gt;</code> 免密登录</p><ul><li>然后直接使用 ssh myserver 即可直接登录</li></ul></li><li><p>ssh <code>&lt;User&gt;</code>@<code>&lt;HostName&gt;</code> -p <code>&lt;PortNumber&gt;</code></p><ul><li>使用用户名 User 登录端口号为 PortNumber 的主机名为 HostName 的服务器</li><li>实例： ssh acs@152.136.154.181 -p 20000</li></ul></li></ul><h4 id="传文件"><a href="#传文件" class="headerlink" title="传文件"></a>传文件</h4><ul><li><p>本地 ==&gt; 服务器</p><ul><li>传文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp  /home/test/hello.txt myserver: #直接复制在根目录</span><br><span class="line">scp  /home/test/hello.txt myserver:/home/temp</span><br><span class="line">scp index.html style.css json.js myserver:/web #多文件</span><br></pre></td></tr></table></figure><ul><li>传文件夹 ：使用 -r 递归复制</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /data myserver:/home/des #把data放在des目录下</span><br></pre></td></tr></table></figure></li><li><p>服务器 ==&gt; 本地</p><ul><li>传文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp myserver:/main.cpp /home/code</span><br><span class="line">scp myserver:/conf.js . #把conf.js复制在本地当前路径</span><br></pre></td></tr></table></figure><ul><li>传文件夹</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r myserver:working .</span><br></pre></td></tr></table></figure></li></ul><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><hr><p>官网：<a href="https://docs.docker.com/engine/install/linux-postinstall/">Post-installation steps for Linux | Docker Documentation</a></p><p>dockerhub：<a href="https://hub.docker.com/">dockerhub</a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install docker.io </span><br></pre></td></tr></table></figure><h4 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h4><ul><li>docker pull xxx 拉取某镜像</li><li>docker rmi xxx 删除某镜像</li><li>docker save -o <code>&lt;Name&gt;</code>.tar <code>&lt;ImageName&gt;</code> 将这个镜像导出到本地 Name.tar 文件中</li><li>docker load -i <code>&lt;Name&gt;</code>.tar 将这个镜像文件加载出来</li></ul><h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -it ubuntu:20.04    #创建并进入一个ubuntu20.04容器</span><br><span class="line"></span><br><span class="line">docker run -it --name redis-test -p 6379:6379 redis:latest /bin/bash    #创建并进入一个redis容器</span><br><span class="line">redis-cli    #开启redis服务</span><br></pre></td></tr></table></figure><ul><li>传文件<ul><li>docker cp /路径/文件名 容器 ID:/上传路径</li><li>docker cp 容器 ID:/上传路径 /路径/文件名</li></ul></li><li>docker start <code>&lt;ContainerName&gt;</code> 启动容器，同理有 stop rm restart</li><li>docker exec -itd <code>&lt;ContainerName&gt;</code> /bin/bash 进入容器<ul><li>ctrl+p + ctrl+q 挂起后退出</li></ul></li><li>docker export -o <code>&lt;Name&gt;</code>.tar <code>&lt;ContainerName&gt;</code> 将容器导出到本地</li><li>docker import <code>&lt;Name&gt;</code>.tar <code>&lt;ContainerName&gt;</code> 将文件导入成镜像并命名为 ContainerName</li><li>docker commit <code>&lt;ContainerName&gt;</code> <code>&lt;REPOSITORY:TAG&gt;</code>从容器创建一个新的镜像</li></ul>]]></content>
    
    
    <summary type="html">常用的命令们</summary>
    
    
    
    <category term="Linux开发" scheme="https://teash1rt.github.io/categories/Linux%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Linux开发" scheme="https://teash1rt.github.io/tags/Linux%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>本站导航</title>
    <link href="https://teash1rt.github.io/2022/06/17/%E6%9C%AC%E7%AB%99%E5%AF%BC%E8%88%AA/"/>
    <id>https://teash1rt.github.io/2022/06/17/%E6%9C%AC%E7%AB%99%E5%AF%BC%E8%88%AA/</id>
    <published>2022-06-16T17:02:42.000Z</published>
    <updated>2024-06-20T17:47:42.113Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hello-欢迎来到我的博客！-smile"><a href="#hello-欢迎来到我的博客！-smile" class="headerlink" title="hello 欢迎来到我的博客！:smile:"></a>hello 欢迎来到我的博客！:smile:</h3><blockquote><p>some of 最近<br>2024.6.16 本科毕业喽！！！</p></blockquote><h3 id="更新计划"><a href="#更新计划" class="headerlink" title="更新计划"></a>更新计划</h3><p>暂定更新两方面内容 :point_down:</p><h4 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h4><ul><li>前端</li><li>后端</li><li>算法</li><li>其他？<br><br></li></ul><h4 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h4><blockquote><p>准备先写点对音乐电影和书的回忆<br>慢慢填坑，文笔极差算是留给自己吧</p></blockquote><ul><li>记那些出现在我生活不同阶段的流行乐们</li><li>…to be continued</li></ul><hr><h3 id="问题们"><a href="#问题们" class="headerlink" title="问题们"></a>问题们</h3><ul><li><strong>关于博客的搭建？</strong></li><li>这个博客用的是 hexo 框架，主题是 butterfly。之前想的是手写一个，但造好的大轮子谁会不爱呢 :heart_eyes:<br><br/></li><li><strong>关于博客又卡又慢？</strong></li><li>博客暂时建在了 github 上，所以网站加载速度会非常的玄学，有时你可能需要魔法</li><li>终于在服务器上部署了！:kissing_heart: （但是服务器到期了:sob::sob::sob:）<br><br/></li><li><strong>关于博客的各种名字？</strong></li><li>Marianne: 源于英剧 normal people，当时觉得这个名字用英式读法念起来很好听，虽然对剧情不感冒但最后还是把这个名字记了下来</li><li>Teashirt: 源于之前很喜欢的歌，还想着 Teashirt 这个词很有意境，结果最后发现就是听错了人家就叫 Teeshirt :sweat:<br><br/></li><li><strong>关于我？</strong></li><li>欢迎来分享交流 :yum:<ul><li><a href="https://github.com/teash1rt">github</a></li><li><a href="https://music.163.com/#/user/home?id=1742940683">网易云</a></li><li><a href="https://www.douban.com/people/162740521/?_i=64185393jFRx07,64185423jFRx07">豆瓣</a></li><li><a href="https://steamcommunity.com/profiles/76561198931408870/">steam</a></li></ul></li></ul>]]></content>
    
    
    <summary type="html">这里是本站导航</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>vue小记</title>
    <link href="https://teash1rt.github.io/2022/06/17/vue%E5%B0%8F%E8%AE%B0/"/>
    <id>https://teash1rt.github.io/2022/06/17/vue%E5%B0%8F%E8%AE%B0/</id>
    <published>2022-06-16T16:33:22.000Z</published>
    <updated>2023-09-27T18:21:31.174Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这里仅的记录我在使用 vue 过程中踩过的坑和常用的代码板子</p><p>本文标题间毫无逻辑关系，纯粹想到哪记到哪</p><p>本文会长期更新，直到下列表达式为真 （vue 完全弃坑 or 成为不犯错误的 vue 大师）</p></blockquote><h3 id="关于组合式-API"><a href="#关于组合式-API" class="headerlink" title="关于组合式 API"></a>关于组合式 API</h3><blockquote><p><code>&lt;script setup&gt;</code> 这块语法糖甜到我根本找不到方向：<a href="https://staging-cn.vuejs.org/api/sfc-script-setup.html">单文件组件 | Vue.js (vuejs.org)</a></p></blockquote><h4 id="defineProps-与-defineEmits"><a href="#defineProps-与-defineEmits" class="headerlink" title="defineProps 与 defineEmits"></a>defineProps 与 defineEmits</h4><ul><li>父子组件传参的写法有了很大的变化我们需要使用<code>defineProps</code>和<code>defineEmits</code>代替原来的<code>props</code>和<code>context.emit</code></li><li>要注意<code>defineProps</code>和<code>defineEmits</code>都是<strong>只在</strong><code>&lt;script setup&gt;</code>中才能使用的编译器宏</li><li>该模式下，使用宏时无需<code>import</code>可以直接使用</li><li>下面例子演示了父子组件相互传递信息的过程</li><li>父组件 ==&gt; 子组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">SonView</span> <span class="attr">:cont</span>=<span class="string">&quot;content&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">SonView</span> <span class="keyword">from</span> <span class="string">&quot;../components/SonView.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> content = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;tom&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">score</span>: <span class="number">92</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">子组件</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">cont</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Object</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">required</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(props.<span class="property">cont</span>.<span class="property">name</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">自此子组件可使用props.cont访问content中的所有参数</span><br></pre></td></tr></table></figure><ul><li>子组件 ==&gt; 父组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SonButton</span> @<span class="attr">change</span>=<span class="string">&quot;add&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; val &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">SonButton</span> <span class="keyword">from</span> <span class="string">&quot;../components/SonButton.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> val = <span class="title function_">ref</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">add</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    val.<span class="property">value</span>++;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">子组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;func&quot;</span>&gt;</span>AddVal<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&quot;change&quot;</span>]);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">func</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">emit</span>(<span class="string">&quot;change&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">点击位于子组件的按钮改变父组件中的数据</span><br></pre></td></tr></table></figure><h4 id="defineExpose"><a href="#defineExpose" class="headerlink" title="defineExpose"></a>defineExpose</h4><ul><li>因为使用<code>&lt;script setup&gt;</code>后不需要 <code>return</code>了，但这样会出现一些问题</li><li>使用 <code>&lt;script setup&gt;</code> 的组件是<strong>默认关闭</strong>的，也即通过模板 <code>ref</code> 或者 <code>$parent</code> 链获取到的组件的公开实例，不会暴露任何在 <code>&lt;script setup&gt;</code> 中声明的绑定</li><li>为了在 <code>&lt;script setup&gt;</code> 组件中明确要暴露出去的属性，使用 <code>defineExpose</code> 编译器宏</li><li><strong>注意时机！</strong>：父组件需要在 <code>onMounted</code>生命周期内或通过触发事件来获取</li><li>下面例子演示了父组件通过<code>ref</code>从子组件获取数据的过程</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">SonButton</span> <span class="attr">ref</span>=<span class="string">&quot;sonref&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;func&quot;</span>&gt;</span>get<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">SonButton</span> <span class="keyword">from</span> <span class="string">&quot;../components/SonButton.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref, onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> sonref = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 第一种方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(sonref.<span class="property">value</span>.<span class="property">val</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 第二种方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">func</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(sonref.<span class="property">value</span>.<span class="property">val</span>);</span></span><br><span class="line"><span class="language-javascript">    sonref.<span class="property">value</span>.<span class="title function_">fun</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">子组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;func&quot;</span>&gt;</span>AddVal<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> val = <span class="title function_">ref</span>(<span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">fun</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">defineExpose</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    val,</span></span><br><span class="line"><span class="language-javascript">    fun,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="定义组件-name"><a href="#定义组件-name" class="headerlink" title="定义组件 name"></a>定义组件 name</h4><ul><li>配置</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">npm i unplugin-vue-define-options -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DefineOptions</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-define-options/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="title function_">vue</span>(),</span><br><span class="line">        <span class="title class_">DefineOptions</span>()</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// tsconfig.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">       <span class="string">&quot;types&quot;</span>: [<span class="string">&quot;unplugin-vue-define-options/macros-global&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>this is a card<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">defineOptions</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;card&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="好用的库们"><a href="#好用的库们" class="headerlink" title="好用的库们"></a>好用的库们</h3><h4 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h4><ul><li><p>官网：<a href="https://v5.bootcss.com/docs/getting-started/introduction/">简介 · Bootstrap v5 中文文档 v5.1 | Bootstrap 中文网 (bootcss.com)</a></p></li><li><p>安装与引入</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// App.vue</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;bootstrap/dist/css/bootstrap.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;bootstrap/dist/js/bootstrap&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="IconPark"><a href="#IconPark" class="headerlink" title="IconPark"></a>IconPark</h4><blockquote><p>碰巧最近有使用 icon 的需求的时候阿里的 iconfont 挂掉了，于是试了试这个网站</p><p>缺点就是图标种类广度有点不足，样式也不够多样，不过大差不差也能用，还能自定义颜色</p></blockquote><ul><li><p>官网：<a href="https://www.jianshu.com/p/c5d7215bd991"><a href="https://iconpark.oceanengine.com/official">ByteDance IconPark (oceanengine.com)</a></a></p></li><li><p>安装与引入</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install @icon-park/vue-next --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// App.vue</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@icon-park/vue-next/styles/index.css&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><p>使用</p><ul><li>从网站复制 vue 代码即可</li><li>注意使用时要<strong>单独引入</strong>，引入的命名方式是<code>kebab-case</code>转<code>CamelCase</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">github-one</span> <span class="attr">theme</span>=<span class="string">&quot;outline&quot;</span> <span class="attr">size</span>=<span class="string">&quot;44&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#000000&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; <span class="title class_">GithubOne</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@icon-park/vue-next&quot;</span>; <span class="comment">// 注意引入的命名方式</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="ElementPlus"><a href="#ElementPlus" class="headerlink" title="ElementPlus"></a>ElementPlus</h4><blockquote><p>需要注意的是 vue3 要引入的是 element-plus</p></blockquote><ul><li>官网： <a href="https://element-plus.org/zh-CN/#/zh-CN">https://element-plus.org/zh-CN/#/zh-CN</a></li><li>安装与引入</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js中引入</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>)</span><br></pre></td></tr></table></figure><ul><li>表单校验板子：<a href="https://element-plus.org/zh-CN/component/form.html#%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C">https://element-plus.org/zh-CN/component/form.html#%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:plain</span>=<span class="string">&quot;true&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>error<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">text</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;color:white&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;user&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;UserFilled&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;item&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-model</span>=<span class="string">&quot;user.username&quot;</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;item&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-model</span>=<span class="string">&quot;user.password&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">show-password</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">paste.capture.prevent</span>=<span class="string">&quot;handlePaste&quot;</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; path: &#x27;/todo/register&#x27; &#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span>没有用户名?请注册&lt;/router-link</span><br><span class="line">          &gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span>登录&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; <span class="title class_">UserFilled</span>, <span class="title class_">Lock</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@element-plus/icons-vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; reactive, ref, toRaw &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; countStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/stores/countStore&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> user = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">username</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">password</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> rules = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">username</span>: [</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;Please input Name&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    ],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">password</span>: [</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;Please input Password&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    ],</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> form = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> store = <span class="title function_">countStore</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">submit</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    form.<span class="property">value</span>.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">axios</span>(&#123;&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">resp</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (resp.<span class="property">data</span> === <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">ElMessage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">showClose</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">message</span>: <span class="string">&quot;Oops, 用户名或密码错误&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">type</span>: <span class="string">&quot;error&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            router.<span class="title function_">push</span>(&#123; <span class="attr">path</span>: <span class="string">&quot;&quot;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">ElMessage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">showClose</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">message</span>: <span class="string">&quot;请求超时&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">type</span>: <span class="string">&quot;warning&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: mediumslateblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.login-container</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">45px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.link</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: indigo;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>图片上传+压缩：<a href="https://blog.csdn.net/weixin_46531845/article/details/125199881">https://blog.csdn.net/weixin_46531845/article/details/125199881</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dialog</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">&quot;profile&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">title</span>=<span class="string">&quot;上传头像&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">draggable</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-if</span>=<span class="string">&quot;uploadview&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">profilePhoto</span> @<span class="attr">change</span>=<span class="string">&quot;upload&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> profile = <span class="title function_">ref</span>(<span class="literal">false</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> uploadview = <span class="title function_">ref</span>(<span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">upload</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    router.<span class="title function_">go</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&quot;上传成功&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">子组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-upload</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">action</span>=<span class="string">&quot;/api/setphoto&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:on-success</span>=<span class="string">&quot;handleAvatarSuccess&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:headers</span>=<span class="string">&quot;&#123; token: token &#125;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:before-upload</span>=<span class="string">&quot;beforeAvatarUpload&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:auto-upload</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">&quot;uploadRef&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:on-change</span>=<span class="string">&quot;changeAvatar&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">&quot;&#123; userid: userid &#125;&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imageUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imageUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;avatar-uploader-icon&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Plus</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">plain</span> @<span class="attr">click</span>=<span class="string">&quot;submitUpload&quot;</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref, defineEmits &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@element-plus/icons-vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> * <span class="keyword">as</span> imageConversion <span class="keyword">from</span> <span class="string">&quot;image-conversion&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> imageUrl = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;token&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> uploadRef = <span class="title function_">ref</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> userid = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;userid&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&quot;change&quot;</span>]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">handleAvatarSuccess</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">emit</span>(<span class="string">&quot;change&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">beforeAvatarUpload</span> = (<span class="params">rawFile</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (rawFile.<span class="property">type</span> !== <span class="string">&quot;image/jpeg&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&quot;Avatar picture must be JPG format!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rawFile.<span class="property">size</span> / <span class="number">1024</span> / <span class="number">1024</span> &gt; <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&quot;Avatar picture size can not exceed 1MB!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rawFile.<span class="property">size</span> / <span class="number">1024</span> / <span class="number">1024</span> &gt; <span class="number">0.05</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 图像压缩至 50KB</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> myImg = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        imageConversion.<span class="title function_">compressAccurately</span>(rawFile, <span class="number">50</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">resolve</span>(res);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> myImg;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">changeAvatar</span> = (<span class="params">uploadFile</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    imageUrl.<span class="property">value</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(uploadFile.<span class="property">raw</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">submitUpload</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    uploadRef.<span class="property">value</span>.<span class="title function_">submit</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.avatar-uploader</span> <span class="selector-class">.avatar</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">178px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">178px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.avatar-uploader</span> <span class="selector-class">.el-upload</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">var</span>(--el-border-color);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: <span class="built_in">var</span>(--el-transition-duration-fast);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.avatar-uploader</span> <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.el-icon</span><span class="selector-class">.avatar-uploader-icon</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">178px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">178px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Unocss"><a href="#Unocss" class="headerlink" title="Unocss"></a>Unocss</h4><ul><li>安装</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">npm install unocss @unocss/preset-uno @unocss/preset-attributify  -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;uno.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// vie.config.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Unocss</span> <span class="keyword">from</span> <span class="string">&#x27;unocss/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; presetUno, presetAttributify &#125; <span class="keyword">from</span> <span class="string">&#x27;unocss&#x27;</span></span><br><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title class_">Unocss</span>(&#123;</span><br><span class="line">      <span class="attr">presets</span>: [</span><br><span class="line">        <span class="title function_">presetUno</span>(),</span><br><span class="line">        <span class="title function_">presetAttributify</span>()</span><br><span class="line">      ]</span><br><span class="line">    &#125;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>映射关系<a href="https://unocss.dev/interactive/">UnoCSS Interactive Docs</a></li></ul><hr><h3 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h3><ul><li>动态组件是很必要而且很香的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-for</span>=<span class="string">&quot;(index, item) in groups&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;func(item)&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; item &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;groups[current]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">ComA</span> <span class="keyword">from</span> <span class="string">&quot;../components/ComA.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">ComB</span> <span class="keyword">from</span> <span class="string">&quot;../components/ComB.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">ComC</span> <span class="keyword">from</span> <span class="string">&quot;../components/ComC.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> groups = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ComA</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ComB</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ComC</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> current = <span class="title function_">ref</span>(<span class="string">&quot;ComA&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">func</span> = (<span class="params">it</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    current.<span class="property">value</span> = it;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用 <code>keep-alive</code> 取消切换组件时 DOM 的销毁，用于保留状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">父组件使用 keep-alive</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ComA</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">ComA</span> <span class="keyword">from</span> <span class="string">&quot;../components/ComA.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">子组件能够持续计数</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; val &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> val = <span class="title function_">ref</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    val.<span class="property">value</span>++;</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="number">200</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="关于路由"><a href="#关于路由" class="headerlink" title="关于路由"></a>关于路由</h3><h4 id="路由懒加载"><a href="#路由懒加载" class="headerlink" title="路由懒加载"></a>路由懒加载</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HomeView</span> <span class="keyword">from</span> <span class="string">&quot;../views/HomeView.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">HomeView</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/About&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;about&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;../views/About.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(process.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h4 id="路由跳转"><a href="#路由跳转" class="headerlink" title="路由跳转"></a>路由跳转</h4><ul><li>使用 <code>router-link</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; name: &#x27;xxx&#x27; &#125;&quot;</span>&gt;</span> 点我跳转 <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>push：选项式 API —- 在选项式 API <code>methods</code> 中使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">func</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/xxx&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>push：组合式 API 中使用 —- 需要引入 <code>useRouter</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">func</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    router.<span class="title function_">push</span>(<span class="string">&quot;/xxx&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="404"><a href="#404" class="headerlink" title="404"></a>404</h4><ul><li>使用正则表达式匹配已有的路由，匹配失败的话就 404 喽</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/404&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;404&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NotFoundView</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/:catchAll(.*)&#x27;</span>,</span><br><span class="line">  <span class="attr">redirect</span>: <span class="string">&#x27;/404&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>获取当前路由路径，可作为判据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法一</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span> === <span class="string">&quot;/xxx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法二</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>();</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br><span class="line"><span class="keyword">if</span> (route.<span class="property">path</span> !== <span class="string">`/xxx`</span>) &#123;</span><br><span class="line">  router.<span class="title function_">push</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;xxx&quot;</span> &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>go</code>和<code>back</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// go: 原页面表单中的内容会丢失；</span></span><br><span class="line">router.<span class="title function_">go</span>(-<span class="number">1</span>)：后退+刷新；</span><br><span class="line">router.<span class="title function_">go</span>(<span class="number">0</span>)：刷新；</span><br><span class="line">router.<span class="title function_">go</span>(<span class="number">1</span>) ：前进</span><br><span class="line"></span><br><span class="line"><span class="comment">// back: 原页表表单中的内容会保留；在返回界面传递参数；</span></span><br><span class="line">router.<span class="title function_">back</span>():后退 ；</span><br><span class="line">router.<span class="title function_">back</span>(<span class="number">0</span>) 刷新；</span><br><span class="line">router.<span class="title function_">back</span>(<span class="number">1</span>)：前进</span><br></pre></td></tr></table></figure><hr><h3 id="Pinia"><a href="#Pinia" class="headerlink" title="Pinia"></a>Pinia</h3><blockquote><p>Pinia 是未来的趋势。它解决了 Vuex 很多的问题，Pinia 取消了 Vuex 的 Mutations，并且在 Action 中同时支持同步和异步；并且支持 Ts 和组合式 API 的语法。</p><p><a href="https://pinia.web3doc.top/">https://pinia.web3doc.top/</a></p></blockquote><ul><li>安装</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line">.<span class="title function_">use</span>(<span class="title function_">createPinia</span>())</span><br></pre></td></tr></table></figure><ul><li>定义<code>Store</code><blockquote><p><a href="https://pinia.web3doc.top/core-concepts/">https://pinia.web3doc.top/core-concepts/</a></p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> testStore = <span class="title function_">defineStore</span>(<span class="string">&quot;test&quot;</span>, &#123;</span><br><span class="line">  <span class="comment">// 相当于 data</span></span><br><span class="line">  <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;mary&quot;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">19</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 相当于 methods</span></span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="title function_">func</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">count</span>++;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 相当于 computed 调用时可直接当作属性</span></span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="title function_">testCount</span>(<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.<span class="property">count</span> * <span class="number">2</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>使用<code>Store</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>click to add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; testStore &#125; <span class="keyword">from</span> <span class="string">&quot;../store/TestStore&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">ChangeVal</span> <span class="keyword">from</span> <span class="string">&quot;./ChangeVal.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> st = <span class="title function_">testStore</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">add</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    st.<span class="property">count</span>++;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>storeToRefs</li></ul><p>该方法能将<code>Store</code>的数据转化为转换为响应式数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> st = <span class="title function_">testStore</span>();</span><br><span class="line"><span class="keyword">let</span> &#123; count, age &#125; = <span class="title function_">storeToRefs</span>(st);</span><br></pre></td></tr></table></figure><ul><li>在<code>js</code>文件中使用<code>Store</code> (如路由页面中)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建文件 store.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> pinia</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js 引入方式修改为</span></span><br><span class="line"><span class="keyword">import</span> pinia <span class="keyword">from</span> <span class="string">&#x27;@/stores/store&#x27;</span></span><br><span class="line">.<span class="title function_">use</span>(pinia)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用时</span></span><br><span class="line"><span class="keyword">import</span> pinia <span class="keyword">from</span> <span class="string">&#x27;@/stores/store&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">countStore</span>(pinia)</span><br></pre></td></tr></table></figure><hr><h3 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h3><ul><li>安装</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>:</span><br><span class="line">    <span class="attr">url</span>:</span><br><span class="line">    <span class="attr">headers</span>:</span><br><span class="line">    <span class="attr">data</span>:</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>二次封装</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElNotification</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">InfoStore</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@/stores/InfoStore&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> pinia <span class="keyword">from</span> <span class="string">&quot;@/stores/store&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> infoStore = <span class="title class_">InfoStore</span>(pinia);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> req1 = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span>,</span><br><span class="line">  <span class="attr">withCredentials</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">req1.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">  config.<span class="property">headers</span>.<span class="property">token</span> = infoStore.<span class="property">token</span>;</span><br><span class="line">  <span class="keyword">return</span> config;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">req1.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">400</span>) &#123;</span><br><span class="line">    <span class="title class_">ElNotification</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: res.<span class="property">data</span>.<span class="property">msg</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res.<span class="property">data</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> req2 = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">  <span class="attr">withCredentials</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">req2.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">400</span>) &#123;</span><br><span class="line">    <span class="title class_">ElNotification</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: res.<span class="property">msg</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 强制退出登录</span></span><br><span class="line">    infoStore.<span class="title function_">clearInfo</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res.<span class="property">data</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; req1, req2 &#125;;</span><br></pre></td></tr></table></figure><hr><h3 id="配置跨域"><a href="#配置跨域" class="headerlink" title="配置跨域"></a>配置跨域</h3><ul><li>在根目录下建立 <code>vue.config.js</code></li><li>配置相关路径，注意后续要在<code>nginx</code>中进行配置!!!</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&quot;@vue/cli-service&quot;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="comment">// 配置跨域</span></span><br><span class="line">      <span class="string">&quot;/api&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&quot;http://152.136.154.181:8060&quot;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&quot;^/api&quot;</span>: <span class="string">&quot;&quot;</span> &#125;,</span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;/loc&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&quot;http://127.0.0.1:8060&quot;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&quot;^/loc&quot;</span>: <span class="string">&quot;&quot;</span> &#125;,</span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><h4 id="Base64转url展示图片"><a href="#Base64转url展示图片" class="headerlink" title="Base64转url展示图片"></a><code>Base64</code>转<code>url</code>展示图片</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">convert_to_url</span>(<span class="params">string</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> byteCharacters = <span class="title function_">atob</span>(string);</span><br><span class="line">  <span class="keyword">const</span> byteArrays = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; byteCharacters.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    byteArrays.<span class="title function_">push</span>(byteCharacters.<span class="title function_">charCodeAt</span>(i));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="keyword">new</span> <span class="title class_">Uint8Array</span>(byteArrays)], &#123; <span class="attr">type</span>: <span class="string">&quot;image/jpeg&quot;</span> &#125;);</span><br><span class="line">  <span class="keyword">const</span> imageUrl = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">  <span class="keyword">return</span> imageUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="AES加解密"><a href="#AES加解密" class="headerlink" title="AES加解密"></a><code>AES</code>加解密</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">npm install crypto-js --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CryptoJS</span> <span class="keyword">from</span> <span class="string">&#x27;crypto-js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> pinia <span class="keyword">from</span> <span class="string">&#x27;@/stores/store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">InfoStore</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/InfoStore&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> infoStore = <span class="title class_">InfoStore</span>(pinia)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> key = <span class="string">&#x27;z2Se46GTYl6ajK2KXTp3XpZG5/ZzLJgT&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">aesEncrypt</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> keyHex = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(key)</span><br><span class="line">    <span class="keyword">const</span> email = infoStore.<span class="property">email</span></span><br><span class="line">    <span class="keyword">let</span> encrypted = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(email, keyHex, &#123;</span><br><span class="line">        <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">ECB</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> encrypted.<span class="title function_">toString</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">SHA256Encrypt</span>(<span class="params">pwd</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="title class_">SHA256</span>(pwd).<span class="title function_">toString</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">aesDecrypt</span>(<span class="params">str, key</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> keyHex = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(key)</span><br><span class="line">    <span class="keyword">let</span> decrypted = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">decrypt</span>(str, keyHex, &#123;</span><br><span class="line">        <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">ECB</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> result_value = decrypted.<span class="title function_">toString</span>(<span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>)</span><br><span class="line">    <span class="keyword">return</span> result_value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">vue的心得和踩过的坑们</summary>
    
    
    
    <category term="前端" scheme="https://teash1rt.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://teash1rt.github.io/tags/vue/"/>
    
    <category term="前端" scheme="https://teash1rt.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>二分答案专题</title>
    <link href="https://teash1rt.github.io/2022/06/16/%E4%BA%8C%E5%88%86%E4%B8%93%E9%A2%98/"/>
    <id>https://teash1rt.github.io/2022/06/16/%E4%BA%8C%E5%88%86%E4%B8%93%E9%A2%98/</id>
    <published>2022-06-16T15:49:48.000Z</published>
    <updated>2024-06-15T16:46:53.095Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul><li>本篇将总结几个二分答案的套路题</li><li>如果你还不知道什么是二分的活建议先从这里开始：<br><a href="https://www.luogu.com.cn/training/111#problems">https://www.luogu.com.cn/training/111#problems</a></li><li>这里写一下我常用的模板，本文基本套用此模板：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设二分范围为 [L,R] 这里只讨论整数范围内的二分 是实数范围内注意需要控制精度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 找到最后一个满足的</span></span><br><span class="line"><span class="type">int</span> l=L,r=R;</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> mid=l+r+<span class="number">1</span> &gt;&gt;<span class="number">1</span>; <span class="comment">//注意l=mid时+1，否则由向下取整的性质会导致死循环</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line">    <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 找到第一个满足的</span></span><br><span class="line"><span class="type">int</span> l=L,r=R;</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> mid=l+r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) r=mid;</span><br><span class="line">    <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="一点导论："><a href="#一点导论：" class="headerlink" title="一点导论："></a>一点导论：</h4><ul><li>二分的本质是什么？ 我的理解是：将一个满足<strong>单调性的求解性问题转化为若干个判断性问题</strong>进行筛选进而求解<ul><li>为什么必须满足单调？ 不如思考中学数学是怎么使用二分思想求解函数零点的——如果不满足单调则无法证明二分的正确性</li><li>二分的意义是什么？ 不二分仍然能通过从头到尾筛选进行求解，二分利用了问题的单调性将线性时间的尝试缩短到对数级别</li><li>为什么转换？ 因为有些问题不好直接求解答案，然而对于某个答案却很好判断其正确性(如果你做过一些二分就明白我在说什么)</li></ul></li><li>二分的必要性： long long 范围内 $log10^{18}$ 也才 60 左右，所以你如果能够察觉到题目具有二段性(即单调性)，那么直接尝试思考最外层是一个二分答案！</li><li>要明确的一点是带有二分的题永远不是在考察二分，而是在于 check 函数的内容，check 里面可能是复杂的模拟贪心或是搜索甚至是 dp，如何写 check 则是考察综合算法能力，不在讨论范围内</li><li>很多题目长得就是一张要二分的脸。但是也有很多二分问题可能会带有一定的迷惑性，让你觉得这道题使用贪心或是 dp 就能够解决，所以本文旨在介绍几个模型，让你更容易首先发掘到这是一道二分问题<br><br></br></li></ul><hr><h4 id="二分-单调队列"><a href="#二分-单调队列" class="headerlink" title="二分+单调队列"></a>二分+单调队列</h4><ul><li>寻找段落 洛谷 P1419</li><li>题目链接：<a href="https://www.luogu.com.cn/problem/P1419">https://www.luogu.com.cn/problem/P1419</a></li><li>题目大意：给定长度为 n 的序列 a，给定长度范围[s,t]，求长度在该范围内的连续子序列的平均值的最大值。即求$\frac{\sum_{i=start}^{end}a_i}{end-start+1} ,s\leq end-start+1 \leq t$ 的最大值</li><li>输入输出：给定序列长度 n 后给定 s 和 t，而后给出 n 个序列值$a_i$ ($n\leq 10^5,1\leq s\leq t \leq n,|a_i|\leq 10^4$) 输出一个保留三位小数的最大平均值</li><li><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">10</span><br><span class="line">3 5</span><br><span class="line">3 -1 4 -3 7 -3 4 -5 2 -1</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">2.667</span><br></pre></td></tr></table></figure></li><li><p>分析：通过这道题你就应该能够明白我之前所说的“有些问题不好直接求解答案，然而对于某个答案却很好判断其正确性”，本题有两个关键巧妙的数学转换。</p><ul><li>二分最大平均值，对于二分值 mid 将序列所有元素都减去 mid，然后判断序列中是否存在长度为 s~t 的序列和大于等于零即可(这里是一个重要的数学转换，与原问题等价)，如果不存在就说明平均值应该更小，反之答案应该更大</li><li>那么如何快速找出满足长度范围的序列和的最大值呢？我们可以先对减去 mid 的序列求出前缀和序列 sum，于是问题变成了判断 $sum_j-sum_i,s\leq j-i+1\leq t$ 的最大值是否大于等于零。求解时我们对 j 遍历，所以$sum_j$已知，问题继续转化为找到范围内最小的 $sum_i$</li><li>如何快速找到前面出现过的最小值呢？我们可以使用单调队列维护(单调队列可以在规定长度内维护最值)，时间复杂度控制在 O(n)，总时间复杂度为 O(nlogn)</li></ul></li><li>代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n,s,t,a[N],q[<span class="number">3</span>*N];</span><br><span class="line"><span class="type">double</span> sum[N];</span><br><span class="line"><span class="type">double</span> res;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) sum[i]=sum[i<span class="number">-1</span>]+(<span class="type">double</span>)a[i]-mid; <span class="comment">// 求前缀和</span></span><br><span class="line"><span class="type">int</span> hh=<span class="number">0</span>,tt=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=s;i&lt;=n;i++) <span class="comment">// 由于最小长度是s，从s开始即可</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(hh&lt;=tt&amp;&amp;sum[q[tt]]&gt;sum[i-s]) tt--; <span class="comment">// 单调队列核心代码</span></span><br><span class="line">q[++tt]=i-s;</span><br><span class="line"><span class="keyword">if</span>(hh&lt;=tt&amp;&amp;i-q[hh]&gt;t) hh++; <span class="comment">// 队列里面维护的长度如果大于t就要弹出</span></span><br><span class="line"><span class="keyword">if</span>(sum[i]-sum[q[hh]]&gt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 单调队列队头一定是最小值，且在长度范围内</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;s,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="type">double</span> l=(<span class="type">double</span>)<span class="number">-1e6</span>,r=(<span class="type">double</span>)<span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">while</span>(r-l&gt;<span class="number">1e-6</span>) <span class="comment">// 这里是实数范围内的二分，需要控制精度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line"><span class="keyword">else</span> r=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3lf&quot;</span>,l);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二分-bfs"><a href="#二分-bfs" class="headerlink" title="二分+bfs"></a>二分+bfs</h4><ul><li>刺杀大使 洛谷 P1902</li><li>题目链接：<a href="https://www.luogu.com.cn/problem/P1902">https://www.luogu.com.cn/problem/P1902</a></li><li>题目大意：给定 n*m 的矩阵，其中$p_{ij}$为矩阵中第 i 行第 j 列的值，要求从第 1 行到达第 n 行(只能相邻走不能跳着走)，起点和终点可任意选取(但起点和终点必须分别为第 1 行和第 n 行中的某点)，对于任意一条抵达路径定义伤害值为该路径中的最大值，问从起点到终点的完整路径最少受到的伤害值为多少？</li><li>输入输出：给定 n,m 后给定 n*m 的矩阵值 $p<em>{ij}$ (n,m,$p</em>{ij}$&lt;=1000) 输出一个数表示最小伤害</li><li><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">4 2</span><br><span class="line">0 0</span><br><span class="line">3 5</span><br><span class="line">2 4</span><br><span class="line">0 0</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">3</span><br></pre></td></tr></table></figure></li><li><p>分析：这道题很容易会想到二分答案，那么对于每个二分值 mid 从起点跑一遍 bfs，过程中如果搜索点矩阵值 val[i][j]&gt;mid 那么跳过它，最后用判断能否到达最后一行并以此作为 check 函数的返回依据即可 复杂度最坏 O(n*m*log(max $p_{ij}$)) 但实际上要小得多</p></li><li>代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m,cost[N][N],st;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">bool</span> vis[N][N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">    vis[x][y]=<span class="number">1</span>;</span><br><span class="line">    queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;x,y&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> u=q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(u.first==n) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> xx=u.first+dx[i],yy=u.second+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(xx&lt;<span class="number">1</span>||xx&gt;n||yy&lt;<span class="number">1</span>||yy&gt;m) <span class="keyword">continue</span>; <span class="comment">//超出边界的不再搜索</span></span><br><span class="line">            <span class="keyword">if</span>(cost[xx][yy]&gt;t||vis[xx][yy]) <span class="keyword">continue</span>; <span class="comment">//被搜过的和超出本次判断限度的不再搜索</span></span><br><span class="line">            vis[xx][yy]=<span class="number">1</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;xx,yy&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x; cin&gt;&gt;x;</span><br><span class="line">        st=<span class="built_in">max</span>(st,x);</span><br><span class="line">        cost[i][j]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>,r=st;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid=l+r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(<span class="number">1</span>,<span class="number">1</span>,mid)) r=mid;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;l;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二分-dfs-图论"><a href="#二分-dfs-图论" class="headerlink" title="二分+dfs 图论"></a>二分+dfs 图论</h4><p><del>我的方法不是正解但仍然是过了 建议最后看一下正解</del></p><ul><li>通往奥格瑞玛的道路 洛谷 P1462</li><li>题目链接：<a href="https://www.luogu.com.cn/problem/P1462">https://www.luogu.com.cn/problem/P1462</a></li><li>题目大意：给定 n 个点 m 条边的无向图，每经过一条边损失相应血量，每经过一个点损失相应金钱，给定初始血量 b(途中血量不能为负)，问从 1 号点到 n 号点的路径中，所经过的所有点中最大损失的金钱的最小值是多少?如果到不了点 n 就输出“AFK”</li><li>输入输出：首先给定 n,m,b，接下来给定 n 个值 fi 表示经过点 i 需要缴费 fi，然后给定每条边的两端点和经过该边损失的血量 ai,bi,ci (n&lt;=1e4 m&lt;=5e4 b,ci,fi&lt;=1e9) 输出最小损失值或“AFK”</li><li><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">4 4 8</span><br><span class="line">8 5 6 10</span><br><span class="line">2 1 2</span><br><span class="line">2 4 1</span><br><span class="line">1 3 4</span><br><span class="line">3 4 3</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">10</span><br></pre></td></tr></table></figure></li><li><p>分析：”最大值的最小值”是不是很熟悉？带着这个题眼的十有八九都是二分答案！这道题跟上一道题几乎一样，唯一不同的是要多维护一个血量。这道题可以使用 dfs，在把血量维护在 dfs 参数中，还是上一题的模式，限定最大损失金钱 mid 判断能不能搜到终点 n。然而正解是跑 spfa 不过我的程序仍然过了，而且根据运行时间来看复杂度不算太糟糕但仍旧比二分+spfa 差了不少 最坏复杂度 O(n*m*log(max fi)) 但实际要小得多</p><blockquote><ul><li>spfa 复杂度为 O(k*m) 实际上我的解法就是暴力版的 spfa 解法 (但如果 spfa 被卡了会退化成 O(n*m) <del>所以一样</del>)</li><li>低情商是我当时压根没想到 spfa，高情商是 dfs 可读性要比 spfa 好理解得多</li></ul></blockquote></li><li>代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">600010</span>;</span><br><span class="line"><span class="type">int</span> n,m,maxx,idx,s;</span><br><span class="line"><span class="type">int</span> c[N],e[N],head[N],nx[N],w[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> v)</span> <span class="comment">//建图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx]=b,w[idx]=v,nx[idx]=head[a],head[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> now,<span class="type">int</span> fa,<span class="type">int</span> up,<span class="type">int</span> ss)</span> <span class="comment">// now是当前所在点 fa是搜到now的前驱节点 up是二分值即最大损失金钱 ss是当前状态的血量</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(now==n) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=head[now];~i;i=nx[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j=e[i];</span><br><span class="line">        <span class="keyword">if</span>(j==fa||c[j]&gt;up||ss&lt;w[i]) <span class="keyword">continue</span>; <span class="comment">// 1.j==fa是不影响正确性的必要剪枝 2.如果将要搜的这个点会使血量为负或大于金钱就跳过</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">dfs</span>(j,now,up,ss-w[i])) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> up)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">-1</span>,up,s)) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">//看看能不能满足金钱损失少于up</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;c[i];</span><br><span class="line">        maxx=<span class="built_in">max</span>(maxx,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b,v; cin&gt;&gt;a&gt;&gt;b&gt;&gt;v;</span><br><span class="line">        <span class="built_in">add</span>(a,b,v),<span class="built_in">add</span>(b,a,v); <span class="comment">//注意是无向图</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l=<span class="built_in">max</span>(c[<span class="number">1</span>],c[n]),r=maxx+<span class="number">1</span>,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid=(<span class="type">long</span> <span class="type">long</span>)l+r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) r=mid,flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag) cout&lt;&lt;l;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;AFK&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二分-并查集"><a href="#二分-并查集" class="headerlink" title="二分+并查集"></a>二分+并查集</h4><ul><li>部落划分 洛谷 P4047 [JSOI2010]</li><li>题目链接：<a href="https://www.luogu.com.cn/problem/P4047">https://www.luogu.com.cn/problem/P4047</a></li><li>题目大意：二维平面上给定 n 个点的坐标，现在要将 n 个点划分为 k 个非空集合，对于一种划分方法，定义两个集合的距离为两集合中直线距离最近的两个点，求出一种划分使得最近的两个集合距离的最大</li><li>输入输出：给定 n k，而后给定 n 个点的横纵坐标 $x_i y_i$ ( $n,k \le10^3$ , $x_i,y_i \le10^4$ ) 输出保留两位小数的最优划分最近的两个集合距离</li><li><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">9 3</span><br><span class="line">2 2</span><br><span class="line">2 3</span><br><span class="line">3 2</span><br><span class="line">3 3</span><br><span class="line">3 5</span><br><span class="line">3 6</span><br><span class="line">4 6</span><br><span class="line">6 2</span><br><span class="line">6 3</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">2.00</span><br></pre></td></tr></table></figure></li><li><p>分析：经典最大值的最小值，由于这道题需要维护集合因此我们可以使用并查集。我们对于最短距离进行二分答案，对于距离 mid，二重循环遍历每一个点对 $p_1,p_2$，如果 $p_1,p_2$直线距离小于 mid 且这俩点不在一个集合内就它们合并。最后看被划分了几个集合即可，如果对于 mid 来说集合数大于等于 k，那么显然可以继续让 mid 变小，否则需要将 mid 增大。总时间复杂度 O( $n^{2}*log(?)$ )，坐标最大值为 $10^4$ ，且本题二分需要在小数上二分精度要控制在 $r-l \ge 10^{-6}$，所以对数项最大约为 log( $10^{10}$ )</p></li><li>代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> db double</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,k,pre[N];</span><br><span class="line">pii q[N];</span><br><span class="line"><span class="function">db <span class="title">dis</span><span class="params">(pii p,pii q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (db)<span class="built_in">sqrt</span>((p.x-q.x)*(p.x-q.x)+(p.y-q.y)*(p.y-q.y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t==pre[t]) <span class="keyword">return</span> pre[t];</span><br><span class="line">    <span class="keyword">return</span> pre[t]=<span class="built_in">find</span>(pre[t]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> k1,<span class="type">int</span> k2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    k1=<span class="built_in">find</span>(k1),k2=<span class="built_in">find</span>(k2);</span><br><span class="line">    <span class="keyword">if</span>(k1!=k2) pre[k1]=k2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(db u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;N;i++) pre[i]=i; <span class="comment">// 注意每次都要初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">dis</span>(q[i],q[j])&gt;=u) <span class="keyword">continue</span>; <span class="comment">// 距离大于u就跳过否则合并</span></span><br><span class="line">        <span class="built_in">merge</span>(i,j);</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s.<span class="built_in">insert</span>(<span class="built_in">find</span>(i)); <span class="comment">// 利用set判重统计集合个数 这里可以优化复杂度不用set</span></span><br><span class="line">    <span class="keyword">return</span> s.<span class="built_in">size</span>()&gt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;q[i].x,&amp;q[i].y);</span><br><span class="line">    db l=<span class="number">0</span>,r=<span class="number">1e5</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;=<span class="number">1e-6</span>) <span class="comment">// 控制精度 题目要求两位小数 二分精度在五六位比较保险</span></span><br><span class="line">    &#123;</span><br><span class="line">        db mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二分-字符串哈希"><a href="#二分-字符串哈希" class="headerlink" title="二分+字符串哈希"></a>二分+字符串哈希</h4><blockquote><p>这道题因为原数据量过小所以是个大水题，但题目本身很好，所以我们不妨思考一下数据量大时的算法</p></blockquote><ul><li>我在哪？ acwing 1460</li><li>题目链接：<a href="https://www.acwing.com/problem/content/1462/">https://www.acwing.com/problem/content/1462/</a></li><li>题目大意：给定长度为 N 的字符串，找到最小的长度 k，使得原字符串中任意长度为 k 的连续子串都不相同</li><li>输入输出：给定长度 N，而后给出长度为 N 的字符串，输出最小满足题意的长度 k。 <strong>原数据只有$N\le100$，我们来思考$N\le10^5$时的解法</strong></li><li><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line">7</span><br><span class="line">ABCDABC</span><br><span class="line"></span><br><span class="line">输出:</span><br><span class="line">4</span><br></pre></td></tr></table></figure></li><li><p>分析：如果$N\le10^5$显然我们需要设计一个$NlogN$的算法，本问题显然满足单调性，即如果最终答案为 res，那么所有小于 res 的答案均不合法而大于 res 的答案全部合法，所以我们可以使用二分答案。那么如何快速判断对于长度 mid 原字符串是否有相同的字串呢？显然可以使用字符串哈希，预处理出原字符串哈希值，从前往后遍历算出所有长度为 mid 的哈希值，再判断是否有出现超过一次的哈希值即可，每次遍历 O(N) 总复杂度 O(NlogN)</p></li><li>代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">110</span>;</span><br><span class="line">ull h[N],p[N];</span><br><span class="line"><span class="type">char</span> str[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function">ull <span class="title">sum</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h[r]-h[l<span class="number">-1</span>]*p[r-l+<span class="number">1</span>]; <span class="comment">// 哈希映射 算出字符串下标 l~r 的哈希值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    unordered_map&lt;ull,<span class="type">bool</span>&gt; hash;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+u<span class="number">-1</span>&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j=i+u<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(hash[<span class="built_in">sum</span>(i,j)]) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 如果出现过这个哈希值 直接判断失败</span></span><br><span class="line">        hash[<span class="built_in">sum</span>(i,j)]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;str+<span class="number">1</span>;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i]=p[i<span class="number">-1</span>]*<span class="number">131</span>;</span><br><span class="line">        h[i]=h[i<span class="number">-1</span>]*<span class="number">131</span>+str[i]; <span class="comment">// 预处理哈希函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l=<span class="number">1</span>,r=n;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid=l+r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) r=mid;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;l;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二分-贪心"><a href="#二分-贪心" class="headerlink" title="二分+贪心"></a>二分+贪心</h4><blockquote><p>贪心在二分中出现的题灰常灰常的多，像 leetcode 中几乎所有二分答案内核都是个贪心。由于篇幅原因本初仅选一题。</p></blockquote><ul><li>Match Points codeforces 1156C</li><li>题目链接：<a href="https://codeforces.com/problemset/problem/1156/C">https://codeforces.com/problemset/problem/1156/C</a></li><li>题目大意：给定长度为 n 的序列和一个数 z，问序列中有最多多少对$i,j$ 满足 $|a_i-a_j|\geq z$，其中$i,j$不重复选择</li><li>输入输出：给定 n，z，然后给定 n 个序列值$a_i$ ($2\leq n\leq 2*10^5,1\leq z\leq 10^9$) 输出一个最大对数</li><li><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">6 4</span><br><span class="line">17 13 16 12 15 11</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">3</span><br></pre></td></tr></table></figure></li><li><p>分析：乍一看能直观的想到二分图最大匹配但是很遗憾数据量不允许。那么如何贪心呢？问题的关键在于对于$a_i$如果有多个$a_j$满足要求我们应该使用哪个$a_j$呢？如果你想的是按顺序最小的匹配最小的那就错了，比如 z=2 时有数据$2 5 7 8$ 答案是两对，但如果使用 2 匹配 5 那么只能凑出一对</p><ul><li>先排序，然后二分答案长度 mid，我们只要判断前 mid 个( $a<em>1$ ~ $a</em>{mid}$ )和后 mid 个( $a<em>{n-mid+1}$ ~ $a</em>{n}$ )能否严格按顺序依次匹配即可，这里满足单调性</li><li>本题的贪心就体现在“前 mid 和后 mid 依次匹配”，而不是随便挑一个满足的匹配</li><li>为什么要判定时要严格按顺序呢？由于排序后序列单调不递减，如果前 mid 中的第 k 个数匹配不了后 mid 中的第 k 个数，即$a_{n-mid+k}-a_k&gt;z$，那么如果想要匹配$a_k$则需要找到更大的数，即下标大于$n-mid+k$的，那么后面必然有一个无法匹配成功，因为后面 mid 个数长度为 mid，中间空出一个后面如果全匹配上那么长度必然为 mid+1 这显然是不可能的</li></ul></li><li>代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">200010</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n,z,a[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=mid;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j=n-mid+i;</span><br><span class="line">        <span class="keyword">if</span>(a[j]-a[i]&lt;z) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;z;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>,r=n&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid=l+r+<span class="number">1</span> &gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;l;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>分数规划</p><ul><li>分数规划是一个经典的使用二分求解的模型</li><li>该问题为给定一个长度为 n 的序列 $f<em>i,g_i$ 求 $\frac{\sum</em>{i = 1}^n f<em>i * x_i}{\sum</em> {i=1}^n g_i * x_i}$ 的最大值 其中 $x_i$ 只能取 0 或 1</li><li>易证得该式对答案具有单调性，将其转换为二分问题设该式可能取值为 mid，我们现在要判断原式大于 mid 是否有解，则等式两边变换可得 $\sum_{i=1}^n(f_i -mid<em>g_i)</em>x_i\geq0$</li><li>最优解显然当 $f_i -mid*g_i$ 为正时令 $x_i=1$ 否则为零即可，如果这样取最后的总和都小于零则向小答案二分否则向大答案二分</li></ul></blockquote><h4 id="分数规划-背包"><a href="#分数规划-背包" class="headerlink" title="分数规划+背包"></a>分数规划+背包</h4><ul><li>Talent Show G 洛谷 P4377 [USACO18OPEN]</li><li>题目链接：<a href="https://www.luogu.com.cn/problem/P4377">https://www.luogu.com.cn/problem/P4377</a></li><li>题目大意：每头奶牛都有重量值和才艺值两个属性，给定 n 头奶牛的重量值 $w_i$ 和才艺值 $t_i$ ，现在你可以任意选择其中的奶牛，使得选出来的奶牛总重量大于给定值 W(保证最初给出的 n 头总重量的和大于 W)，且需要让总才艺值和总重量的比值尽可能大。</li><li>输入输出：给定 n，W，然后接下来 n 行每行给出这头奶牛的 $w_i,t_i(1\leq n\leq 250 , 1\leq W \leq 1000 , 1\leq w_i\leq 10^6 , 1\leq t_i \leq 10^3)$, 输出 答案*1000 并向下取整的值</li><li><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">3 15</span><br><span class="line">20 21</span><br><span class="line">10 11</span><br><span class="line">30 31</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">1066</span><br></pre></td></tr></table></figure></li><li><p>分析：本题就是在分数规划的基础上加上了选择的限制，那么如何处理选择出的奶牛重量和大于 W 呢？在此基础上又如何算出最大比值呢？</p><ul><li>对于比值我们没法直观的计算，那么我们使用分数规划的思想对答案进行二分，这样二分出的答案一定是最大的，但这样一定对吗？</li><li>本题中首先需要满足重量和大于 W，这个优先级是最高的，我们需要判断满足二分值的所有方案中的最大重量是否大于 W。这里有点困难，因为我们好像没法知道具体的选择方案。但是我们需要知道具体的方案吗？就像求解背包问题的时候我们根本不关心具体的方案，我们只关心最优的解是多少</li><li>上面介绍分数规划的时候如何取值的最优解呢？满足 $f_i -mid*g_i&gt;0$ 就取，但在本题中如果都这样取不一定满足重量总和大于 W，反过来说如果要优先满足重量大于 W，那么要抛弃这种贪心的选法</li><li>对于 $f_i - mid <em> g_i$ 这个式子用本题的变量名字就是 $t_i - mid </em> w_i$ ，我们只需跑一边 01 背包即可，那么上式就是每个物品的贡献。dp 时对于重量大于等于 W 的都算在 dp[W]上(取 max，因为我们只需看 W 的情况)，那么最后只需要判断 dp[W]是否大于等于零即可</li></ul></li><li>代码</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">260</span>,M=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m,w[N],t[N];</span><br><span class="line"><span class="type">double</span> res,f[N],dp[<span class="number">10</span>*M];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=(<span class="type">double</span>)t[i]-u*w[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;M;i++) dp[i]=<span class="number">-1e5</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j+w[i]&gt;m) dp[m]=<span class="built_in">max</span>(dp[m],dp[j]+f[i]); <span class="comment">// 大于m的都算在m上,否则可能会爆空间</span></span><br><span class="line">        <span class="keyword">else</span> dp[j+w[i]]=<span class="built_in">max</span>(dp[j+w[i]],dp[j]+f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[m]&gt;=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;w[i]&gt;&gt;t[i];</span><br><span class="line">    <span class="type">double</span> l=<span class="number">0</span>,r=<span class="number">3e5</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;<span class="number">1e-5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid=(<span class="type">double</span>)(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;(<span class="type">int</span>)(<span class="number">1000</span>*l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">关于二分答案题目的小总结</summary>
    
    
    
    <category term="算法" scheme="https://teash1rt.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="c++" scheme="https://teash1rt.github.io/tags/c/"/>
    
    <category term="算法" scheme="https://teash1rt.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
